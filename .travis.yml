dist: xenial
language: c

sudo: false

branches:
  only:
  - master

env:
  global:
    - RACKET_DIR=~/racket
    - TRAVIS_RACKET_DIR=~/travis-racket
  matrix:

    # Versions prior to 5.92 don't seem to install the current
    # directory as a package named "anarki" using
    # `raco pkg install --deps search-auto`. It's unknown how well
    # they work.

    # Versions prior to 6.0.1 don't provide the `--drdr` option, which
    # is used by one of the testing commands here, but they otherwise
    # should work as well as the versions after.

    # Versions prior to 6.1 don't provide the `--check-pkg-deps`
    # option, which is used by one of the testing commands here, but
    # they otherwise should work as well as the versions after.

    # Versions prior to 6.3 don't define the `racket/random` module,
    # which is needed for news.arc and one of the tests.

    # Versions prior to 6.11 have a bug in unmarshaling namespace
    # information, which prevents us from having ac.scm statically
    # require `crypto-random-bytes` from `racket/random` or
    # `ssl-connect` from `openssl`.

    # Versions prior to 7.6 don't define the `ffi/unsafe/vm` module,
    # which is needed to mutate pairs in the Chez-Scheme-based (CS)
    # releases of Racket. (As of version 7.9, the Ches Scheme releases
    # still aren't the default.)

    # This is the earliest known supported version.
    - RACKET_VERSION=7.6 SHOULD_COMMIT_TO_GH_PAGES=false

    # Racket 7.7 introduced a new HAMT-based implementation of hash
    # tables, which changes the iteration order.

    # This is the latest known supported version.
    - RACKET_VERSION=7.9 SHOULD_COMMIT_TO_GH_PAGES=true

    # We include the latest Racket version in the build matrix, but
    # since it's part of `allow_failures` below, a failure here
    # doesn't count. This is purely to make it easy to check whether
    # we're already compatible with a newer Racket release.
    #
    # We test on both the "before Chez"/"bytecode" [bc] version and
    # the "Chez Scheme" [cs] version. As of version 7.9, the
    # Chez Scheme releases of Racket still aren't the default, but
    # this way we can be prepared for when they are.
    #
    - RACKET_VERSION=HEADBC SHOULD_COMMIT_TO_GH_PAGES=false
    - RACKET_VERSION=HEADCS SHOULD_COMMIT_TO_GH_PAGES=false


matrix:
  allow_failures:
    - env: RACKET_VERSION=HEADBC SHOULD_COMMIT_TO_GH_PAGES=false
    - env: RACKET_VERSION=HEADCS SHOULD_COMMIT_TO_GH_PAGES=false
  # Fast finish: The overall build result is determined as soon as any
  # of the rows have failed or all of the rows that aren't allowed to
  # fail have succeeded.
  fast_finish: true



# Build lifecycle steps


before_install:
  # We install Racket.
  - git clone https://github.com/greghendershott/travis-racket.git "${TRAVIS_RACKET_DIR}"
  - cat "${TRAVIS_RACKET_DIR}/install-racket.sh" | bash
  - export PATH="${RACKET_DIR}/bin:${PATH}"

script:
  # We test that the Racket package installs and sets up properly, and
  # we run the Racket unit test runner just to be sure it works, even
  # though we launch most of our unit tests in a different way
  #
  # This (and most of the rest of this file) is adapted from the
  # sample .travis.yml at
  # <https://github.com/greghendershott/travis-racket>.

  # We install the current directory as a linked package, and we
  # automatically fetch all the dependencies.
  - raco pkg install --deps search-auto

  # We recompile Anarki and check that the Racket package dependencies
  # declared in info.rkt are correct. (TODO: Why does travis-racket
  # suggest this? Is there a chance `raco setup` fails when
  # `raco pkg install` doesn't?)
  - raco setup --check-pkg-deps anarki

  # We run Racket tests according to the way the DrDr continuous
  # testing system does. This imitates the settings used by the Racket
  # package index at <https://pkgs.racket-lang.org/>.
  #
  # Due to the usual `raco test` behavior, this runs any submodules
  # named "test" of any Racket module files existing recursively under
  # this package. If a submodule named "test" is not present in a
  # module file, this falls back to running the whole file.
  #
  # Due to the `--drdr` option, this runs each test with a separate
  # temporary directory, gives it no stdin, suppresses its stdout, and
  # treats any stderr output as a test failure. See
  # <https://docs.racket-lang.org/raco/test.html>.
  #
  - raco test --drdr --package anarki


  # We run the unit tests and try to build the HTML help. While doing
  # so, we disable rlwrap using `-n`.
  #
  # Note that at this point, we have already installed any necessary
  # Racket package dependencies using the `raco pkg install` command
  # above.
  #
  # Running build-web-help.arc actually runs tests.arc too, so we
  # don't need to do both.
  #
#  - ./arc.sh -n tests.arc
  - ./arc.sh -n build-web-help.arc


after_success:
  # We commit the HTML help to the `gh-pages` branch. This script will
  # stop early if it wasn't initiated by a commit to the `master`
  # branch.
  - ./deploy-to-gh-pages.sh
